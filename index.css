:root {
  --pink: #ff1493;
  --dark-pink: #72094f;
  --blue: #0476d9;
  --dark-blue: #022652;
  --light-blue: #13c9f2;
  --white: #d0d8ff;
  --black: #211d31;
  --grey: #7c798b;
  --light-grey: #8b8fa9;
  --dark-grey: #282832;

  --shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.9);
}

/* General reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  border-radius: 8px;
}

html,
body {
  height: 100vh;
  overflow: hidden;
  background: var(--dark-blue);
  color: var(--white);
  font-family: "Montserrat", sans-serif;

  /* nested media query */
  @media (max-width: 768px) {
    .nested-container {
      color: var(--pink);
    }
  }
}

p {
  font-size: 1rem;
  font-weight: 500;
  line-height: 1.25;
  padding: 0rem 1rem;
  max-width: 700px;
}

a {
  text-decoration: none;
  color: var(--pink);
}

a:hover {
  color: var(--light-blue);
}

.material-symbols-outlined {
  font-variation-settings: "FILL" 0, "wght" 400, "GRAD" 0, "opsz" 24;
}

/* Header styles */
.header {
  box-shadow: var(--shadow);
  background-color: var(--dark-grey);
  width: 100%;
  padding: 1rem;
  text-align: center;
  display: flex;
  justify-content: center;
  gap: 1rem;
  color: var(--light-blue);
}

.main {
  width: "100vw";
  justify-content: "center";
  flex: 1;
  flex-direction: column;
  padding: 1rem 3rem 4rem 3rem;
  overflow-y: auto;
}

.section-heading {
  font-size: 2rem;
  font-weight: 700;
  line-height: 1.5;
  text-align: center;
  color: var(--light-blue);
  text-shadow: var(--shadow);
}

.v-stack {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
}

.h-stack {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.collapsible {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  width: 100%;
  padding: 1rem;

  @media (min-width: 1300px) {
    flex-direction: row;
  }
}

.section-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
  width: 100%;
  padding: 1rem;
  background: hsl(from var(--dark-grey) h s l / 0.3);
  box-shadow: var(--shadow);
  padding: 2rem;
  margin-top: 1rem;
}

.footer {
  box-shadow: var(--shadow);
  background-color: var(--dark-grey);
  text-align: center;
  padding: 1rem;
  width: 100%;
}

.entire-page {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  justify-content: center;
  align-items: center;
  height: 100vh;
  width: 100vw;
}

.large-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 80vh;
  width: 80vw;
  border: 1px solid black;
}

.nested-container {
  color: var(--light-blue);
}

.card-child {
  background-color: var(--dark-grey);
  color: var(--light-blue);
  padding: 1rem;
  box-shadow: var(--shadow);
}

.has-card {
  width: 300px;
  background-color: var(--dark-grey);
  padding: 1rem;
  box-shadow: var(--shadow);
  flex-direction: column;
  justify-content: center;
  gap: 1rem;
}

.has-card:has(.card-child) {
  background-color: var(--dark-pink);
  color: var(--light-blue);
  padding: 1rem;
}

.normal-text {
  box-shadow: var(--shadow);
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  width: 350px;
  background: var(--light-blue);
  color: var(--dark-grey);
  padding: 1rem;
}

.balanced-text {
  box-shadow: var(--shadow);
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  width: 350px;
  color: var(--light-blue);
  background: var(--dark-grey);
  padding: 1rem;
  text-wrap: balance;
}

.pretty-text {
  box-shadow: var(--shadow);
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  width: 350px;
  color: var(--black);
  background: var(--pink);
  padding: 1rem;
  text-wrap: pretty;
}

.side-label {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  color: var(--light-blue);
  font-weight: 700;
  background: var(--dark-grey);
  padding: 0.5rem 1rem;
  transform: rotate(-90deg);
  box-shadow: var(--shadow);
  text-shadow: var(--shadow);
}

.color-mix1 {
  background: color-mix(in srgb, red 50%, blue 50%);
  padding: 1rem;
}

.transparent-mix-background {
  padding: 1rem;
  /* Fallback color */
  background: rgba(255, 128, 128, 0.5); /* A semi-transparent light red */
  /* color-mix usage with transparency */
  background: color-mix(
    in srgb,
    rgba(255, 0, 0, 0.5) 50%,
    rgba(0, 0, 255, 0.5) 50%
  );
}

.lightness-mix-background {
  padding: 1rem;
  /* Fallback color */
  background: #9e9e9e; /* A medium gray */
  /* color-mix usage with lightness adjustment */
  background: color-mix(
    in srgb,
    black plus 50% lightness,
    white minus 50% lightness
  );
}

.card {
  padding: 1rem;
  box-shadow: var(--shadow);
  width: 300px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  font-weight: 600;
}

.card-colors {
  background: var(--dark-grey);
  color: var(--pink);
  font-size: 1rem;
  height: 200px;
}

@container (min-width: 600px) {
  .card-colors {
    background: var(--light-blue);
    color: var(--black);
    font-size: 1.25rem;
    height: 225px;
  }
}

@container (min-width: 900px) {
  .card-colors {
    background: var(--dark-pink);
    color: var(--white);
    font-size: 1.5rem;
    height: 250px;
  }

  @container (min-width: 1200px) {
    .card-colors {
      background: var(--grey);
      color: var(--black);
      font-size: 1.75rem;
      height: 275px;
    }
  }
}

.grid-container {
  display: grid;
  width: 100vw;
  gap: 1rem;
  grid-template-columns: repeat(
    auto-fill,
    minmax(350px, 1fr)
  ); /* Default to as many columns as can fit */
  container-type: inline-size; /* Define the container for container queries */
}

/* Adjust the number of columns based on the container's width */
@container (min-width: 600px) {
  .grid-container {
    grid-template-columns: repeat(
      2,
      1fr
    ); /* 2 columns when the container is at least 300px wide */
  }
}

@container (min-width: 900px) {
  .grid-container {
    grid-template-columns: repeat(
      3,
      1fr
    ); /* 3 columns when the container is at least 600px wide */
  }
}

@container (min-width: 1200px) {
  .grid-container {
    grid-template-columns: repeat(
      4,
      1fr
    ); /* 4 columns when the container is at least 900px wide */
  }
}

.grid-item {
  /* Styles for individual grid items */
  box-shadow: var(--shadow);
  width: 250px;
  height: 250px;
  justify-self: center;
  align-self: center;
  object-fit: cover;
}

.direction-changing {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  background-color: var(--dark-pink);
}

.moving-piece {
  box-shadow: var(--shadow);
  width: 250px;
  height: 250px;
  justify-self: center;
  align-self: center;
  object-fit: cover;
}

@container (min-width: 700px) {
  .direction-changing {
    flex-direction: row;
    gap: 2rem;
  }
  .moving-piece {
    width: 200px;
    height: 200px;
  }
}

@container (min-width: 1200px) {
  .direction-changing {
    flex-direction: column;
    gap: 1rem;
  }

  .moving-piece {
    width: 220px;
    height: 220px;
  }
}

@container (min-width: 1500px) {
  .direction-changing {
    flex-direction: row;
    gap: 3rem;
  }
  .moving-piece {
    width: 350px;
    height: 350px;
  }
}

.grid-container2 {
  display: grid;
  grid-template-columns: 1fr; /* Creates two columns of equal width */
  gap: 10px; /* Adds space between the columns */

  @media (min-width: 700px) {
    grid-template-columns: 1fr 1fr; /* Creates two columns of equal width */
    gap: 20px; /* Adds space between the columns */
  }
}

.grid-item2 {
  width: 300px;
  height: 100px;
  background-color: var(--dark-grey);
  color: var(--pink);
  border: 1px solid black;
  box-shadow: var(--shadow);
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.5rem;
  font-weight: 600;
  text-shadow: var(--shadow);
}

.parent-grid {
  display: grid;
  grid-template-columns: 1fr 2fr; /* Two columns with different widths */
  gap: 10px; /* Space between grid items */
}

.subgrid-container {
  display: grid;
  grid-template-columns: subgrid; /* Makes the subgrid use the parent's columns */
  gap: 10px;
}

.subgrid-item {
  box-shadow: var(--shadow);
  width: 150px;
  height: 50px;
  background: var(--light-blue);
  color: var(--dark-grey);
  display: flex;
  justify-content: center;
  align-items: center;
  text-shadow: var(--shadow);
}

.scroll-container {
  /* This enables scroll snapping */
  width: 350px;
  scroll-snap-type: y mandatory;
  overflow-y: scroll;
  height: 350px; /* Fixed height to enable scrolling */
  padding: 1rem;
  gap: 20px;
  padding: 0px 15px 0px 0px;
  margin-right: 15px;
}

.scroll-snap-item {
  height: 350px; /* Fixed height for each item */
  width: 350px;
  object-fit: cover;
  scroll-snap-align: start; /* Snaps the item to the start of the scroll container */
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 5px 0; /* Adds some space between the items */
  background: var(--dark-pink);
  box-shadow: var(--shadow);
  font-size: 1.5rem;
  text-shadow: var(--shadow);
}

.pointer {
  cursor: pointer;
}
